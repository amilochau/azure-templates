{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "494881272965336552"
    }
  },
  "parameters": {
    "organizationPrefix": {
      "type": "string",
      "maxLength": 3,
      "minLength": 3,
      "metadata": {
        "description": "The organization prefix"
      }
    },
    "applicationName": {
      "type": "string",
      "maxLength": 12,
      "minLength": 3,
      "metadata": {
        "description": "The application name"
      }
    },
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "Development",
        "Staging",
        "Production"
      ],
      "metadata": {
        "description": "The environment name of the deployment stage"
      }
    },
    "hostName": {
      "type": "string",
      "maxLength": 3,
      "minLength": 3,
      "allowedValues": [
        "dev",
        "stg",
        "prd"
      ],
      "metadata": {
        "description": "The host name of the deployment stage"
      }
    },
    "appConfigurationName": {
      "type": "string",
      "metadata": {
        "description": "The App Configuration name - usefull if useAppConfiguration is set to true"
      }
    },
    "appConfigurationResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The App Configuration resource group - usefull if useAppConfiguration is set to true"
      }
    },
    "useApplicationInsights": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use Application Insights"
      }
    },
    "useServiceBus": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use a Service Bus"
      }
    },
    "serviceBusQueues": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The Service Bus queues"
      }
    },
    "serviceBusClients": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The Service Bus clients"
      }
    },
    "useKeyVault": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use a Key Vault"
      }
    },
    "useAppConfiguration": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use an existing App Configuration"
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "hostingPlanName": "[format('{0}-sp-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName'))]",
    "storageAccountName": "[replace(format('{0}-stg-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName')), '-', '')]",
    "aiName": "[format('{0}-ai-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName'))]",
    "serviceBusNamespaceName": "[format('{0}-bus-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName'))]",
    "keyVaultName": "[format('{0}-kv-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName'))]",
    "functionsAppName": "[format('{0}-fn-{1}-{2}', parameters('organizationPrefix'), parameters('applicationName'), parameters('hostName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}/{1}', variables('functionsAppName'), 'web')]",
      "properties": {
        "linuxFxVersion": "DOTNET|3.1",
        "localMySqlEnabled": false,
        "http20Enabled": true,
        "minTlsVersion": "1.2",
        "ftpsState": "Disabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionsAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}/{1}', variables('functionsAppName'), 'appsettings')]",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[if(parameters('useApplicationInsights'), reference(resourceId('Microsoft.Resources/deployments', variables('aiName')), '2019-10-01').outputs.InstrumentationKey.value, '')]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[if(parameters('useApplicationInsights'), reference(resourceId('Microsoft.Resources/deployments', variables('aiName')), '2019-10-01').outputs.ConnectionString.value, '')]",
        "ASPNETCORE_APPCONFIG_ENDPOINT": "[if(parameters('useAppConfiguration'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('appConfigurationResourceGroup')), 'Microsoft.Resources/deployments', parameters('appConfigurationName')), '2019-10-01').outputs.endpoint.value, '')]",
        "ASPNETCORE_APPLICATION": "[parameters('applicationName')]",
        "ASPNETCORE_ENVIRONMENT": "[parameters('environmentName')]",
        "ASPNETCORE_HOST": "[parameters('hostName')]",
        "ASPNETCORE_KEYVAULT_VAULT": "[if(parameters('useKeyVault'), reference(resourceId('Microsoft.Resources/deployments', variables('keyVaultName')), '2019-10-01').outputs.vaultUri.value, '')]",
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]",
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "false"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('aiName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('appConfigurationResourceGroup')), 'Microsoft.Resources/deployments', parameters('appConfigurationName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionsAppName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}/{1}', variables('functionsAppName'), 'connectionstrings')]",
      "properties": {
        "ServiceBusConnectionString": {
          "value": "[if(parameters('useServiceBus'), reference(resourceId('Microsoft.Resources/deployments', variables('serviceBusNamespaceName')), '2019-10-01').outputs.primaryConnectionString.value, '')]",
          "type": "ServiceBus"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('serviceBusNamespaceName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionsAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-01-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "functionapp",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-01",
      "name": "[variables('functionsAppName')]",
      "location": "[variables('location')]",
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "reserved": true,
        "httpsOnly": true,
        "dailyMemoryTimeQuota": 10000
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ]
    },
    {
      "condition": "[parameters('useAppConfiguration')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[parameters('appConfigurationName')]",
      "resourceGroup": "[parameters('appConfigurationResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appConfigurationName": {
            "value": "[parameters('appConfigurationName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "7987499997533266796"
            }
          },
          "parameters": {
            "appConfigurationName": {
              "type": "string",
              "metadata": {
                "description": "App Configuration name"
              }
            }
          },
          "functions": [],
          "resources": [],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigurationName'))]"
            },
            "apiVersion": {
              "type": "string",
              "value": "2021-03-01-preview"
            },
            "name": {
              "type": "string",
              "value": "[parameters('appConfigurationName')]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigurationName')), '2021-03-01-preview').endpoint]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('useKeyVault')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('keyVaultName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "16405594429103493900"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name"
              }
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "tenantId": "[subscription().tenantId]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-04-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[variables('location')]",
              "properties": {
                "tenantId": "[variables('tenantId')]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "apiVersion": {
              "type": "string",
              "value": "2021-04-01-preview"
            },
            "name": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            },
            "vaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))).vaultUri]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('useApplicationInsights')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('aiName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiName": {
            "value": "[variables('aiName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "767926890425894445"
            }
          },
          "parameters": {
            "aiName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights name"
              }
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('aiName')]",
              "location": "[variables('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('aiName'))]"
            },
            "apiVersion": {
              "type": "string",
              "value": "2020-02-02-preview"
            },
            "name": {
              "type": "string",
              "value": "[parameters('aiName')]"
            },
            "InstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('aiName'))).InstrumentationKey]"
            },
            "ConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('aiName'))).ConnectionString]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('useServiceBus')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serviceBusNamespaceName": {
            "value": "[variables('serviceBusNamespaceName')]"
          },
          "serviceBusQueues": {
            "value": "[parameters('serviceBusQueues')]"
          },
          "serviceBusClients": {
            "value": "[parameters('serviceBusClients')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "10250812488601429141"
            }
          },
          "parameters": {
            "serviceBusNamespaceName": {
              "type": "string",
              "metadata": {
                "description": "Service Bus namespace name"
              }
            },
            "serviceBusQueues": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The Service Bus queues"
              }
            },
            "serviceBusClients": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The Service Bus clients"
              }
            },
            "serviceBusQueueProperties": {
              "type": "object",
              "defaultValue": {
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "enablePartitioning": false,
                "enableExpress": false
              },
              "metadata": {
                "description": "Service Bus queue properties"
              }
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2021-01-01-preview",
              "name": "[parameters('serviceBusNamespaceName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "zoneRedundant": false
              }
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[format('{0}/{1}', parameters('serviceBusNamespaceName'), 'owner-app')]",
              "properties": {
                "rights": [
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
              ]
            },
            {
              "condition": "[greater(length(parameters('serviceBusQueues')), 0)]",
              "copy": {
                "name": "queue_owner",
                "count": "[length(parameters('serviceBusQueues'))]"
              },
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2018-01-01-preview",
              "name": "[format('{0}/{1}', parameters('serviceBusNamespaceName'), if(empty(parameters('serviceBusQueues')), 'dummy', parameters('serviceBusQueues')[copyIndex()]))]",
              "properties": "[parameters('serviceBusQueueProperties')]",
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
              ]
            },
            {
              "condition": "[greater(length(parameters('serviceBusClients')), 0)]",
              "copy": {
                "name": "auth_clients",
                "count": "[length(parameters('serviceBusClients'))]"
              },
              "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
              "apiVersion": "2017-04-01",
              "name": "[format('{0}/{1}', parameters('serviceBusNamespaceName'), if(empty(parameters('serviceBusClients')), 'dummy', parameters('serviceBusClients')[copyIndex()]))]",
              "properties": {
                "rights": [
                  "Listen",
                  "Send"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBusNamespaceName'))]"
            },
            "apiVersion": {
              "type": "string",
              "value": "2021-01-01-preview"
            },
            "name": {
              "type": "string",
              "value": "[parameters('serviceBusNamespaceName')]"
            },
            "primaryConnectionString": {
              "type": "string",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', parameters('serviceBusNamespaceName'), 'owner-app'), '2017-04-01').primaryConnectionString]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('useAppConfiguration')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('auth-{0}-{1}', variables('functionsAppName'), parameters('appConfigurationName'))]",
      "resourceGroup": "[parameters('appConfigurationResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionsAppName')), '2021-01-01', 'full').identity.principalId]"
          },
          "appConfigurationName": {
            "value": "[parameters('appConfigurationName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "17933283654670514791"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Principal ID"
              }
            },
            "appConfigurationName": {
              "type": "string",
              "metadata": {
                "description": "App Configuration name"
              }
            }
          },
          "functions": [],
          "variables": {
            "roleDefinitionIds": {
              "App Configuration Data Reader": "516239f1-63e1-4d78-a4de-a74fb236a071"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', parameters('appConfigurationName'))]",
              "name": "[guid(resourceGroup().id, parameters('principalId'), resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigurationName')))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionIds')['App Configuration Data Reader'])]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionsAppName'))]"
      ]
    },
    {
      "condition": "[parameters('useKeyVault')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('auth-{0}-{1}', variables('functionsAppName'), variables('keyVaultName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionsAppName')), '2021-01-01', 'full').identity.principalId]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "5994393305348805294"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Principal ID"
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name"
              }
            }
          },
          "functions": [],
          "variables": {
            "roleDefinitionIds": {
              "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(resourceGroup().id, parameters('principalId'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionIds')['Key Vault Secrets User'])]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionsAppName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyVaultName'))]"
      ]
    }
  ]
}